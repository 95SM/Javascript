제어문 
    1. 조건문     (중요)
	                 if (조건문) {
					 // 조건문이 참이면 실행 되는 부분
					 }		   
					 
					 
					 if ~ else
					 if (조건문) {
					 // 조건문이 참일 때 실행되는 영역 
					 } else {
					 //조건문이 거짓일 때 실행되는 영역
					 }
					 
					 if ~ else if ~ else ..
					 
					 if  (조건문1) {
					 //조건문1이 참일 때
					 } else if (조건문2) {
					 //조건문 1 =거짓,조건문2 -참
					 } else if (조건문3) {
					 //조건문1,조건문2 -거짓,조건문3 -참
					 } else{
					 //모든 조건이 거짓 일때 실행되는 부분
					 }
                    비교 연산자 + 논리 연산자(비교 연산자를 여러개 ) 
					(참 ,거짓을논할수있는연산자)					
	2. 선택문
                       매칭시 실행 흐름은 break를 만날때 까지 위에서 아래로 실행이 된다	   
                 	   switch(키워드){
					   case "키워드1" :
					       // 키워드1이 매칭이되면 실행되는 부분
						   breack;
					   case "키워드2" :
					       // 키워드 2가 매칭이되면 실행되는 부분
						   breack;
					   case "키워드3" :
                           // 키워드3이 매칭이되면 실행되는 부분					   
						 break;
				    default :
					       //아무것도 매칭이 안될 때 실행 되는 부분
					}
					
					ex) 
					var city = "인천";
					switch(city) {
					  case"서울"  :
					      console.log("서울 거주자");
				      case "인천" :
					      console.log("인천 거주자");
					}
					
					break를 집어 넣었을때

               
					var city = "인천";
					switch(city) {
					  case"서울"  :
					  break;
					      console.log("서울 거주자");
				      case "인천" :
					  break;
					      console.log("인천 거주자");
					}	
					
	3. 반복문
	               while
				       while(조건문){
					        //조건문이 true이면 반복 실행 되는 부분
	
					   break;     --> 반복 멈춤
					   continue; --> 현재 반복을 멈추고 반복 시작(건너 뛰기)
					   }
					   
					   
				   do ~ while
				   
				   
				       do {
					      //조건식이 true이면 반복되면 부분
	     				 } while(조건식);
						 -일단 실행 부터 하고 조건식에 따라서 반복
						 -최소한 1번은 실행되는 반복조건
				   for
				   
				       for (초기값;조건식;증감식) {
					   //조건식이 true이면 반복되는 영역
					   }
					   
					   ex)
					   var i = 1;
					   var total = 0;
					   while(i <= 100) {
					   total += 1;
					   
					   i++;
					   }
					   
				반복안에 반복문
				->중첩 반복문
				   while - while
				   for - for
				   
				   구구단
				   i.j,k,l,m ... 관례적으로 초기화 값 변수
				  
	템플릿 리터럴
	`- 백틱
	   -줄개행이 자유롭게
	   -보간 표현법(변수,연산,함수)
	      ${변수,연산,함수}
		  
		  i + " x " + j + " = " + i * j
		  
    변수 선언자
	var
	let     - var 과 동일하게 쓸 수 있다.
	        - 유효한 범위가 { }
    const - 상수 - 변경할 수 없는 값을 지정할 때 쓰는 선언자
		  
		  